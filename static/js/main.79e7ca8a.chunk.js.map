{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","handlerTab","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"uLAcaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,gCACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,oBAEE,UAAQ,MACRE,UACEE,IAAW,CAAE,YAAaJ,IAAQF,IAJtC,SAOE,mBACEO,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBN,SAACN,GACdA,IAAQF,GACVD,EAAcG,GAoBaO,CAAWP,IAH5B,SAKGA,EAAIQ,SAXFR,EAAIC,WAmBnB,qBACEC,UAAU,QACV,UAAQ,aAFV,SAIGJ,EAAYW,cCpDRd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGJ,EAAYU,SAGf,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAee,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.79e7ca8a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Prors = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: React.Dispatch<React.SetStateAction<{\n    id: string;\n    title: string;\n    content: string;\n  }>>,\n};\n\nexport const Tabs: React.FC<Prors> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handlerTab = (tab: Tab) => {\n    if (tab !== selectedTab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            return (\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                className={\n                  classNames({ 'is-active': tab === selectedTab })\n                }\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handlerTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}